{"version":3,"sources":["webpack:///./src/pages/hq/settings/DataExport.jsx","webpack:///./src/components/hq/hqTopNav.js","webpack:///./node_modules/@material-ui/icons/PersonRounded.js","webpack:///./src/components/hq/settingsSideNav.js","webpack:///./node_modules/@material-ui/core/esm/Avatar/Avatar.js","webpack:///./node_modules/@material-ui/core/esm/Link/Link.js"],"names":["useStyles","makeStyles","theme","root","overflowX","backgroundColor","themeHQ","palette","background","paper","minHeight","withRoot","location","classes","className","container","direction","item","md","p","variant","display","align","color","linkActive","textDecoration","links","label","link","withStyles","flexGrow","avatar","width","height","marginRight","grow","menuButton","marginLeft","navBlock","paddingTop","paddingBottom","appbar","zIndex","toolbar","paddingLeft","props","actions","position","justify","alignItems","to","map","index","key","style","activeStyle","partiallyActive","state","title","underline","justifyContent","alt","_interopRequireDefault","Object","defineProperty","exports","value","_react","_default","createElement","Fragment","fill","d","styles","drawer","flexShrink","drawerPaper","h1","headers","h2","h3","h4","btnPrimary","buttons","primary","btnSecondary","secondary","btnLink","navLink","textTransform","padding","fontWeight","navLinkActive","fontFamily","sidenav","sidenavActive","appHeader","borderBottom","anchor","Avatar","forwardRef","ref","childrenProp","children","childrenClassNameProp","childrenClassName","classNameProp","_props$component","component","Component","imgProps","sizes","src","srcSet","other","img","isValidElement","cloneElement","system","colorDefault","typography","fontSize","pxToRem","borderRadius","overflow","userSelect","type","grey","textAlign","objectFit","name","Link","_props$color","onBlur","onFocus","TypographyClasses","_props$underline","_props$variant","_useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","useState","_React$useState2","focusVisible","setFocusVisible","handlerRef","concat","button","event","underlineNone","underlineHover","underlineAlways","WebkitTapHighlightColor","outline","border","margin","cursor","verticalAlign","borderStyle"],"mappings":"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","file":"component---src-pages-hq-settings-data-export-jsx-f4cc6529db00bc0207ba.js","sourcesContent":["import React from 'react'\n// import clsx from 'clsx'\nimport PropTypes from 'prop-types'\n\n// Material UI components\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// Material UI Styles\nimport { ThemeProvider } from '@material-ui/styles'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { themeHQ } from '../../../styles/theme.ts'\n\n// Gastby\n// import { Link } from 'gatsby'\nimport withRoot from '../../../withRoot'\n\n// components\nimport TopNavHQ from '../../../components/hq/hqTopNav'\nimport SettingsSideNav from '../../../components/hq/settingsSideNav'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    overflowX: 'auto',\n    backgroundColor: themeHQ.palette.background.paper,\n    minHeight: 800\n  }\n}))\n\nfunction DataExport ({ location }) {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <ThemeProvider theme={themeHQ}>\n        <TopNavHQ />\n        <Grid container direction='row'>\n          <Grid item md={2}>\n            <SettingsSideNav />\n          </Grid>\n          <Grid item md={10}>\n            <Grid container direction='column' >\n              <Box p={6}>\n                <Typography variant='h1' display='block' align='left'>\n                    Data Export\n                </Typography>\n                <Typography variant='body1' color='textSecondary'> To be added later... </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </ThemeProvider>\n    </div>\n  )\n}\n\nDataExport.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\n// export default withRoot(withStyles(styles)(About));\nexport default withRoot(DataExport)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport withRoot from '../../withRoot'\n\n// material-ui\nimport AppBar from '@material-ui/core/AppBar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport MuiLink from '@material-ui/core/Link'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\n// icon\nimport UserIcon from '@material-ui/icons/PersonRounded'\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  avatar: {\n    width: 32,\n    height: '32px !important',\n    marginRight: 10\n  },\n  grow: {\n    //   flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  navBlock: {\n    backgroundColor: 'inherit',\n    '&:hover': {\n      backgroundColor: '#4F4F6F'\n    }\n  },\n  link: {\n    color: '#fff',\n    textDecoration: 'none',\n    // fontSize: '13px',\n    // fontWeight: 500,\n    marginLeft: '20px',\n    marginRight: '20px',\n    paddingTop: '0',\n    paddingBottom: '0'\n  },\n  appbar: {\n    backgroundColor: '#1F1F3F',\n    height: '60px',\n    zIndex: 1500\n  },\n  toolbar: {\n    height: '60px',\n    paddingLeft: '20px',\n    '& div': {\n      height: '100%'\n    }\n  }\n}\n\nconst linkActive = {\n  color: '#fff',\n  backgroundColor: '#4F4F6F',\n  textDecoration: 'none'\n}\n\nconst links = [\n  {\n    label: 'Apps Configurations',\n    link: '/hq/apps/ThemeSettings'\n  },\n  {\n    label: 'Customers',\n    link: '/hq/defaultempty'\n  },\n\n  {\n    label: 'Store Operations',\n    link: '/hq/defaultempty'\n  },\n  {\n    label: 'IT Management',\n    link: '/hq/settings/'\n  }\n]\n\nfunction TopNav (props, actions) {\n  const { classes } = props\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appbar}>\n        <Toolbar variant=\"dense\" className={classes.toolbar}>\n          <Grid container direction='row' justify='space-between' alignItems='center'>\n            <Grid item md={3}>\n              <Box display='flex' alignItems='center' >\n                <Typography variant='h2'>\n                  <Link to=\"/styleguides/hq\" className={classes.link}>Tulip Headquarter</Link>\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item md={6}>\n              <Grid container direction='row' alignItems='stretch' >\n                {links.map((item, index) => (\n                  <Grid item key={index}>\n                    {/* <Link> is from gastby, Material-UI link is imported as <MuiLink> */}\n                    <Link to={item.link}\n                      style={{ textDecoration: 'none' }}\n                      activeStyle={linkActive}\n                      partiallyActive={true}\n                      state={{ title: `${item.label}` }}\n                    >\n                      <Box display='flex' alignItems='center' className={classes.navBlock} >\n                        <Typography variant=\"h3\" display='inline' color=\"inherit\" >\n                          <MuiLink to='Test' className={classes.link} underline='none'>{item.label}</MuiLink>\n                        </Typography>\n                      </Box>\n                    </Link>\n                  </Grid>\n                ))}\n              </Grid>\n            </Grid>\n            <Grid item md={3} >\n              <Box display='flex' direction='row' justifyContent='flex-end' alignItems='center'>\n                <Avatar alt=\"User Icon\" display='inline' className={classes.avatar}><UserIcon /></Avatar>\n                <Typography variant=\"body1\" color=\"inherit\" display='inline'>Lezhong</Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nTopNav.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(TopNav)\n","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon[\"default\"])(_react[\"default\"].createElement(_react[\"default\"].Fragment, null, _react[\"default\"].createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n}), _react[\"default\"].createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v1c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-1c0-2.66-5.33-4-8-4z\"\n})), 'PersonRounded');\n\nexports[\"default\"] = _default;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport withRoot from '../../withRoot'\n\n// material-ui\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MuiLink from '@material-ui/core/Link'\nimport Drawer from '@material-ui/core/Drawer'\nimport { withStyles } from '@material-ui/core/styles'\n\n// styles\nimport { headers, descriptions } from '../../styles/typography.ts'\nimport { buttons } from '../../styles/button.ts'\n\n// Material UI Styles\nimport { ThemeProvider } from '@material-ui/styles'\nimport { themeHQ } from '../../styles/theme.ts'\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  drawer: {\n    width: 240,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: 240,\n    paddingTop: 60,\n    backgroundColor: '#2F2F4F'\n  },\n\n  h1: headers.h1,\n  h2: headers.h2,\n  h3: headers.h3,\n  h4: headers.h4,\n  btnPrimary: buttons.primary,\n  btnSecondary: buttons.secondary,\n  btnLink: buttons.link,\n\n  navLink: {\n    backgroundColor: 'inherit',\n    // fontFamily: 'Roboto',\n    color: '#fff',\n    textDecoration: 'none',\n    textTransform: 'capitalize',\n    padding: 14,\n    fontWeight: 500,\n    '&:hover': {\n      backgroundColor: '#4F4F6F',\n      textDecoration: 'none'\n    }\n  },\n  navLinkActive: {\n    backgroundColor: '#4F4F6F',\n    fontFamily: 'Roboto',\n    color: '#fff',\n    textDecoration: 'none',\n    textTransform: 'capitalize',\n    padding: 14,\n\n    '&:hover': {\n      backgroundColor: '#4F4F6F'\n    }\n  },\n\n  sidenav: {\n    backgroundColor: 'inherit',\n    '&:hover': {\n      backgroundColor: '#4F4F6F'\n    }\n  },\n\n  sidenavActive: {\n    backgroundColor: '#4F4F6F',\n    '&:hover': {\n      backgroundColor: '#4F4F6F'\n    }\n  },\n\n  appHeader: {\n    paddingLeft: 30,\n    paddingTop: 30,\n    paddingBottom: 20,\n    borderBottom: 'solid 1px #4F4F6F',\n    // fontSize: 16,\n\n    '& > h3': {\n      color: '#D2D2D2',\n      textTransform: 'uppercase'\n    }\n  }\n}\n\nconst links = [\n  {\n    label: 'Data Import',\n    link: '/hq/settings/DataImport'\n  },\n  {\n    label: 'Data Export',\n    link: '/hq/settings/DataExport'\n  },\n  {\n    label: 'Security Settings',\n    link: '/hq/settings/SecuritySettings'\n  },\n  {\n    label: 'User Access Control',\n    link: '/hq/settings/UserAccessControl'\n  },\n  {\n    label: 'User Management',\n    link: '/hq/settings/UserManagement'\n  }\n]\n\nconst linkActive = {\n  color: '#fff',\n  backgroundColor: '#4F4F6F',\n  textDecoration: 'none'\n}\n\nfunction SettingsSideNav (props) {\n  const { classes } = props\n  return (\n    <ThemeProvider theme={themeHQ}>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.appHeader}>\n          <Typography variant='h3'>IT Management</Typography>\n        </div>\n        <List>\n          {links.map((item, index) => (\n            <Link to={item.link} style={{ textDecoration: 'none' }} activeStyle={linkActive} state={{ title: `${item.label}` }}>\n              <ListItem key={index} className={classes.sidenav}>\n                {/* <ListItemText primary={item.label} /> */}\n                <MuiLink to={item.link} className={classes.navLink}>{item.label}</MuiLink>\n              </ListItem>\n            </Link>\n          ))}\n        </List>\n      </Drawer>\n    </ThemeProvider>\n  )\n}\n\nSettingsSideNav.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SettingsSideNav)\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if there are children and not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background[\"default\"],\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover'\n    }\n  };\n};\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      childrenClassNameProp = props.childrenClassName,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"childrenClassName\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\"]);\n\n  var children = null;\n  var img = src || srcSet;\n\n  if (img) {\n    children = React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenClassNameProp && React.isValidElement(childrenProp)) {\n    children = React.cloneElement(childrenProp, {\n      className: clsx(childrenClassNameProp, childrenProp.props.className)\n    });\n  } else {\n    children = childrenProp;\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classNameProp, !img && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar.\n   * `src` and `alt` props will not be used and no `img` will\n   * be rendered by default.\n   *\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   * The className of the child element.\n   * Used by Chip and ListItemIcon to style the Avatar icon.\n   */\n  childrenClassName: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component\n   * is used to display an image.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   */\n  srcSet: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '../utils/helpers';\nimport withStyles from '../styles/withStyles';\nimport { useIsFocusVisible } from '../utils/focusVisible';\nimport { useForkRef } from '../utils/reactHelpers';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    // Remove grey highlight\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 'none',\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focusVisible = _React$useState2[0],\n      setFocusVisible = _React$useState2[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, component === 'button' && classes.button, focusVisible && classes.focusVisible),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['default', 'error', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` property applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   *  Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);"],"sourceRoot":""}